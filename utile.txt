

curl https://pyenv.run | bash
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - bash)"
eval "$(pyenv virtualenv-init -)"

curl -sSL https://install.python-poetry.org | python3 -
export PATH="$HOME/.local/bin:$PATH"

git clone https://github.com/google-research/timesfm.git

pip install gdown
with zipfile.ZipFile('all_six_datasets.zip', 'r') as zip_ref:
    zip_ref.extractall('./')
    
    
wget https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.27.04_linux.run
./cuda_11.2.0_460.27.04_linux.run --toolkit --installpath=/media/fenrir/disk1/danieleda/local/cuda-11.2





pyenv local 3.10.16
cd timesfm
poetry env use 3.10.16
poetry lock
poetry install -E  pax


export LD_LIBRARY_PATH="/workspace/cuda-11.2/lib64:$LD_LIBRARY_PATH"


se installo con pip ivece che pyenv
pip install paxml
pip install --upgrade "jax[cuda12]"==0.4.26


poetry run python -m ipykernel install --user --name "poetry_timesfm" --display-name "Poetry (timesfm)"


dentro $HOME/.local/share/jupyter/kernels/poetry_timesfm/kernel.json 



{
 "argv": [
  "/root/.cache/pypoetry/virtualenvs/timesfm-p1AFFT58-py3.10/bin/python",
  "-m",
  "ipykernel_launcher",
  "-f",
  "{connection_file}"
 ],
 "display_name": "Poetry (timesfm)",
 "language": "python",
 "env": {
  "LD_LIBRARY_PATH": "/root/cuda-11.2/lib64:/usr/local/nvidia/lib:/usr/local/nvidia/lib64"
  },
 "metadata": {
  "debugger": true
 }
}
